@page "/videos"
@rendermode InteractiveServer

<PageTitle>Videos</PageTitle>

<h1>Gallery</h1>

@if (videoPreviews == null)
{
    <p>Loading videos...</p>
}
else if (!videoPreviews.Any())
{
    <p>No videos available.</p>
}
else
{
    <div class="gallery">
        @foreach (var video in videoPreviews)
        {
            var filename = $"{baseUrl}{video}?v={Guid.NewGuid()}";
            <div class="gallery-item">
                <div class="video-entry">
                    <video class="video-video" controls>
                        <source src="@(filename)" type="video/mp4" preload="metadata">
                        Your browser does not support the video tag.
                    </video>
                    <div class="video-title">@video</div>
				</div>
            </div>
        }
    </div>
}

@code {
    private List<string> videoPreviews;
    private string baseUrl;

    [Inject]
    private MediaUpload.MediaUploadService MediaUploadService { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    protected override void OnInitialized()
    {
		if (!MediaUploadService.isConfigSet()) {
			NavigationManager.NavigateTo("/");
		}
        baseUrl = "/UploadedVideos/Previews/";
        videoPreviews = MediaUploadService.GetVideoPreviews();
        MediaUploadService.OnVideosChanged += LoadVideos;
    }

    private async void LoadVideos() {
		videoPreviews = new List<string>();
        await InvokeAsync(StateHasChanged);
        videoPreviews = MediaUploadService.GetVideoPreviews();
        await InvokeAsync(StateHasChanged);
    }
}